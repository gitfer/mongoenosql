
Building a sharded environment:

shard0/rs0
shard0/rs1
shard0/rs2
shard1/rs0
shard1/rs1
shard1/rs2

mkdir -p /data/shard0/rs0 /data/shard0/rs1 /data/shard0/rs2 
mongod --replSet s0 --logpath "s0-r0.log" --dbpath /data/shard0/rs0 --port 37017 --fork --shardsvr
mongod --replSet s0 --logpath "s0-r1.log" --dbpath /data/shard0/rs1 --port 37018 --fork --shardsvr
mongod --replSet s0 --logpath "s0-r2.log" --dbpath /data/shard0/rs2 --port 37019 --fork --shardsvr

mongo --port 37017 << 'EOF'

config = { _id: "s0", members: [
	{_id: 0, host: "fede.local:37017"},
	{_id: 1, host: "fede.local:37018"},
	{_id: 2, host: "fede.local:37019"}
]};
fs.initiate(config)
EOF

mkdir -p /data/shard1/rs0 /data/shard1/rs1 /data/shard1/rs2 
mongod --replSet s1 --logpath "s1-r0.log" --dbpath /data/shard1/rs0 --port 47017 --fork --shardsvr
mongod --replSet s1 --logpath "s1-r1.log" --dbpath /data/shard1/rs1 --port 47018 --fork --shardsvr
mongod --replSet s1 --logpath "s1-r2.log" --dbpath /data/shard1/rs2 --port 47019 --fork --shardsvr

mongo --port 37017 << 'EOF'

config = { _id: "s1", members: [
	{_id: 0, host: "fede.local:47017"},
	{_id: 1, host: "fede.local:47018"},
	{_id: 2, host: "fede.local:47019"}
]};
fs.initiate(config)
EOF

# now start 3 config servers
mkdir -p /data/config/config-a /data/config/config-b /data/config/config-c
mongod --logpath "cfg-a.log" --dbpath /data/config/config-a --port 57017 --fork --configsvr
mongod --logpath "cfg-b.log" --dbpath /data/config/config-b --port 57018 --fork --configsvr
mongod --logpath "cfg-c.log" --dbpath /data/config/config-c --port 57019 --fork --configsvr

# start mongos on a standard port
mongos --logpath "mongos-1.log" --configdb fede.local:57017,fede.local:57018,fede.local:57019 --fork

# add shards and enable sharding on the test db
mongo << 'EOF'
db.adminCommand({ addshard: "s0/fede.local:37017"});
db.adminCommand({ addshard: "s1/fede.local:47017"});
db.adminCommand({enableSharding: "test"})
db.adminCommand({shardCollection: "test.grades", key: {student_id: 1}});
EOF



=============================================================================================

config servers: mongo servers che tengono traccia di dove sono gli shards.
Se non puoi usare la shardkey mongos fa' un broadcast della richiesta a tutti i replica set (no shard key means scattered operations).

sh.help()
sh.status()

Implications of sharding:
* Every doc includes the shard key
* shard key is immutable

Choosing a shard key:
1. Sufficient cardinality: cioe' assicurarsi che ci sia sufficiente varieta'.
2. Evitare hotspotting in writes: capita per tutto cio' che è monotonically increasing (es. BSON_id)